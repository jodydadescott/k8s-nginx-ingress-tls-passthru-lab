
EMAIL="jody@thescottsweb.com"
FQDN="labx.thescottsweb.com"

function main()
{

[[ "$EMAIL" ]] || { err "Missing required var EMAIL"; return 3; }
[[ "$FQDN" ]] || { err "Missing required var FQDN"; return 3; }

cat <<EOF > install.sh
#!/bin/bash
# Do not edit! Automatically generated by $0

# Deploy an Ingress controller
helm repo add bitnami https://charts.bitnami.com/bitnami
helm install ingress bitnami/nginx-ingress-controller

# Deploy a Lets Encrypt Cert Manager
helm repo add jetstack https://charts.jetstack.io
kubectl create namespace cert-manager
kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.14.1/cert-manager.crds.yaml
kubectl apply -f certmanager.yaml
helm install cert-manager --namespace cert-manager jetstack/cert-manager --version v0.14.1

# Deploy example TLS app
helm install ghost bitnami/ghost --set ghostHost=$FQDN,serviceType=ClusterIP

# Create ingress
kubectl apply -f ingress.yaml

EOF
chmod +x install.sh

cat <<EOF > certmanager.yaml
apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  labels:
    name: letsencrypt-prod
spec:
  acme:
    email: $EMAIL
    privateKeySecretRef:
      name: letsencrypt-prod
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
    - http01:
        ingress:
          class: nginx
EOF

cat <<EOF > ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: joomla-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  rules:
  - host: $FQDN
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ghost
            port:
              number: 80
  tls:
  - secretName: joomla-tls-cert
    hosts:
      - $FQDN
EOF
}

function err() { echo "$@" 1>&2; }

main "$@"
